#!/usr/bin/env python3

import states_enums
import sys
from dictionaries import mib_type_switch, event_switch

def add_div(file_parsed):
    file_parsed.write('----------------------------------------------------')

def print_event_type(events, file_parsed):
    file_parsed.write(str(mib_type_switch.get(events[0])))

def print_if_or_router_state(event, file_parsed):
    file_parsed.write(event_switch.get(event, ""))

def get_header(events):
    header = events[1]
    events = events[2:]
    return header, events

def get_and_print_ids(event, file_parsed):
    if event.split('=')[0] == states_enums.ROUTER_ID_MIB:
        file_parsed.write('ROUTER ID: ' + event.split('=')[1] )
    if event.split('=')[0] == states_enums.INTERFACE_ID_MIB:
        file_parsed.write('INTERFACE ID: ' + event.split('=')[1] )

def parse_line(line, file_parsed):
    print(line)
    events = line.split(',')
    header, events = get_header(events)
    print(events)
    if events:
        add_div(file_parsed)
        print_event_type(events, file_parsed)
        for event in events:
            get_and_print_ids(event, file_parsed)
            print_if_or_router_state(event, file_parsed)

        print()

def get_trap(file):
    for line in sys.stdin:
        line = line.rstrip('\n')
        file.write(line + ',')

if __name__ == "__main__":
    file = open('/home/oscar/logs.txt', 'r')
    file_parsed = open('/home/oscar/logs_parsed.txt', 'w+')
    #get_trap(file)
    for line in file:
        parse_line(line, file_parsed)

    add_div(file_parsed)
    file_parsed.close()



